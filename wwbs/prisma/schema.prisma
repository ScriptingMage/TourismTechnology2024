// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HikingTrail {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  description      String?
  length           Int
  hikingTrailStage HikingTrailStage[]
  hikingTrailAccommodation HikingTrailAccommodation[]
}

model HikingTrailStage {
  id             Int         @id @default(autoincrement())
  title          String      @db.VarChar(255)
  description    String?
  position       Int
  distance       Int
  hikingTrailId  Int
  hikingTrail    HikingTrail @relation(fields: [hikingTrailId], references: [id])
  startLongitude Float?
  startLatitude  Float?
  endLongitude   Float?
  endLatitude    Float?
  hikingTrailAccommodation HikingTrailAccommodation[]
}

model Accommodation {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String?
  capacity    Int
  latitude    Float
  longitude   Float
  hikingTrailAccommodation HikingTrailAccommodation[]
}

model HikingTrailAccommodation {
  id             Int         @id @default(autoincrement())
  hikingTrailId  Int
  accommodationId Int
  hikingTrail    HikingTrail @relation(fields: [hikingTrailId], references: [id])
  accommodation   Accommodation @relation(fields: [accommodationId], references: [id])
  hikingTrailStageId Int
  hikingTrailStage  HikingTrailStage @relation(fields: [hikingTrailStageId], references: [id])
}

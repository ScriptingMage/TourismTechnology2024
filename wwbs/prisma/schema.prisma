// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HikingTrail {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  description              String?
  length                   Int
  hikingTrailStage         HikingTrailStage[]
  hikingTrailAccommodation HikingTrailAccommodation[]
  booking                  Booking[]
}

model HikingTrailStage {
  id                       Int                        @id @default(autoincrement())
  title                    String                     @db.VarChar(255)
  description              String?
  position                 Int
  distance                 Int
  hikingTrailId            Int
  hikingTrail              HikingTrail                @relation(fields: [hikingTrailId], references: [id])
  startLongitude           Float?
  startLatitude            Float?
  endLongitude             Float?
  endLatitude              Float?
  hikingTrailAccommodation HikingTrailAccommodation[]
  bookingStages            BookingStage[]
}

model Accommodation {
  id                       Int                        @id @default(autoincrement())
  name                     String                     @db.VarChar(255)
  description              String?
  capacity                 Int
  latitude                 Float
  longitude                Float
  hikingTrailAccommodation HikingTrailAccommodation[]
  bookingStages            BookingStage[]
}

model HikingTrailAccommodation {
  id                 Int              @id @default(autoincrement())
  hikingTrailId      Int
  accommodationId    Int
  hikingTrail        HikingTrail      @relation(fields: [hikingTrailId], references: [id])
  accommodation      Accommodation    @relation(fields: [accommodationId], references: [id])
  hikingTrailStageId Int
  hikingTrailStage   HikingTrailStage @relation(fields: [hikingTrailStageId], references: [id])
}

model Booking {
  id            Int            @id @default(autoincrement())
  hikingTrailId Int
  hikingTrail   HikingTrail    @relation(fields: [hikingTrailId], references: [id])
  startDate     DateTime
  hikers        Int
  bookingStages BookingStage[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model BookingStage {
  id                 Int              @id @default(autoincrement())
  bookingId          Int
  booking            Booking          @relation(fields: [bookingId], references: [id])
  startDate          DateTime
  endDate            DateTime
  accommodationId    Int
  accommodation      Accommodation    @relation(fields: [accommodationId], references: [id])
  hikingTrailStageId Int
  hikingTrailStage   HikingTrailStage @relation(fields: [hikingTrailStageId], references: [id])
  hikers             Int
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
}
